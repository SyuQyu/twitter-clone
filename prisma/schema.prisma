// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("URL_DEV")
  referentialIntegrity = "prisma"
}

model User {
  id           Int     @id @default(autoincrement())
  email        String
  name         String?
  username     String  @unique
  password     String
  profileImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  RefreshToken RefreshToken[]
  tweet        Tweet[]
  MediaFiles   MediaFile[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int

  @@index([userId])
}

model Tweet {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Author
  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  // replay
  replyToId Int?
  replyTo   Tweet?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Tweet[] @relation("replies")

  MediaFiles MediaFile[]

  @@index([replyToId])
  @@index([authorId])
}

model MediaFile {
  id               Int    @id @default(autoincrement())
  url              String
  providerPublicId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // user
  user   User @relation(fields: [userId], references: [id])
  userId Int

  // tweets
  tweet   Tweet? @relation(fields: [tweetId], references: [id])
  tweetId Int?

  @@index([userId])
  @@index([tweetId])
}
